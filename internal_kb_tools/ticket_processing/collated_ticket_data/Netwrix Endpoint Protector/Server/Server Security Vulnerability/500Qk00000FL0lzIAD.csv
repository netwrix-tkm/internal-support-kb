"Id","CaseNumber","Ticket_Record_Type_Name__c","Subject","Description","DevOps_Steps_to_Reproduce__c","What_We_Know__c","Next_Steps__c","Solution_Comment__c","Issue_Type__c","Ticket_Owner_Name__c","Ticket_Type__c","Platform__c","Collector_Code__c","Feature__c","Product_Version__c","Build_Number__c","Age__c","Status","Account_Name__c","Contact_Name__c","CreatedDate","ClosedDate"
"500Qk00000FL0lzIAD","00420056","Support Ticket","Security Vulnerability found due to deprecated cryptographic settings via SSH","Security Vulnerability found due to deprecated cryptographic settings via SSH. Please advise on how to resolve this. 

Impact

A man-in-the-middle attacker may be able to exploit this vulnerability to record the communication to decrypt the session key and even the messages


Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to <A HREF=""<a href='https://csrc.nist.gov/publications/detail/nistir/7966/final' target='_blank'>https://csrc.nist.gov/publications/detail/nistir/7966/final</a>"" TARGET=""_blank"">Security of Interactive and Automated Access Management Using Secure Shell (SSH)</A> .
Settings currently considered deprecated:

1.Ciphers using CFB or OFB:
These are considered uncommon and deprecated due to vulnerabilities when compared to newer cipher chaining modes such as CTR or GCM.
 
2.RC4 cipher (arcfour, arcfour128, arcfour256):
The RC4 cipher is no longer considered secure and exhibits cryptographic bias.
 
3.Ciphers with a 64-bit block size (DES, 3DES, Blowfish, IDEA, CAST):
These ciphers may be vulnerable to birthday attacks (Sweet32).
 
4.Key exchange algorithms using DH group 1 (diffie-hellman-group1-sha1, diffie-hellman-group14-sha1,gss-group1-sha1-*):
DH group 1 uses a 1024-bit key size, which is considered too short and vulnerable to Logjam-style attacks.

5.Key exchange algorithm &quot;rsa1024sha1&quot;:
This algorithm is very uncommon and deprecated due to its short RSA key size.

6.MAC algorithm &quot;umac-32&quot;:
This algorithm is extremely uncommon and deprecated due to its very short MAC length.

7.Cipher &quot;none&quot;:
This cipher is available only in SSHv1.

8.MAC algorithm &quot;MD5&quot;:
All MD5 based mac algorithms are deprecated.

9.96-bit MAC:
both sha1 and sha2 variants of 96 bit macs are considered deprecated. 

<a href='https://10.CBC' target='_blank'>10.CBC</a> Ciphers:
All CBC Ciphers are deprecated.

As cryptographic attacks on SHA-1 (RFC 9142) become more feasible, the integrity and security of communications relying on it can be compromised. We agree that reporting diffie-hellman-group14-sha1 as deprecated is on harsher side of the gray area, but it ensures that you are aware of its weakness and the risks they pose. While it can be used as a last resort when no better options are available, this should be seen as an exception rather than a rule, highlighting the importance of transitioning to more secure algorithms whenever possible.","","Had remote session. Found another line there which we commented out + added the remaining line(as indicated). 

---
In our latest (5.9.4.0) EPP Server image, we are using these in /etc/ssh/sshd_config:


--- CODE ---
Ciphers aes128-ctr,aes192-ctr,aes256-ctr
MACs hmac-sha2-256,hmac-sha2-512
--- CODE ---

You may modify/set the same lines inside the same file on the customer's EPPServer appliance and then restart SSH:


--- CODE ---service ssh restart
--- CODE ---

----
We received the below email from the customer:
""
Security Vulnerability found due to deprecated cryptographic settings via SSH. Please advise on how to resolve this.

Impact

A man-in-the-middle attacker may be able to exploit this vulnerability to record the communication to decrypt the session key and even the messages


Avoid using deprecated cryptographic settings.
Use best practices when configuring SSH.
Refer to <A HREF=""<a href='https://csrc.nist.gov/publications/detail/nistir/7966/final' target='_blank'>https://csrc.nist.gov/publications/detail/nistir/7966/final</a>"" TARGET=""_blank"">Security of Interactive and Automated Access Management Using Secure Shell (SSH)</A> .
Settings currently considered deprecated:

1.Ciphers using CFB or OFB:
These are considered uncommon and deprecated due to vulnerabilities when compared to newer cipher chaining modes such as CTR or GCM.

2.RC4 cipher (arcfour, arcfour128, arcfour256):
The RC4 cipher is no longer considered secure and exhibits cryptographic bias.

3.Ciphers with a 64-bit block size (DES, 3DES, Blowfish, IDEA, CAST):
These ciphers may be vulnerable to birthday attacks (Sweet32).

4.Key exchange algorithms using DH group 1 (diffie-hellman-group1-sha1, diffie-hellman-group14-sha1,gss-group1-sha1-*):
DH group 1 uses a 1024-bit key size, which is considered too short and vulnerable to Logjam-style attacks.

5.Key exchange algorithm &quot;rsa1024sha1&quot;:
This algorithm is very uncommon and deprecated due to its short RSA key size.

6.MAC algorithm &quot;umac-32&quot;:
This algorithm is extremely uncommon and deprecated due to its very short MAC length.

7.Cipher &quot;none&quot;:
This cipher is available only in SSHv1.

8.MAC algorithm &quot;MD5&quot;:
All MD5 based mac algorithms are deprecated.

9.96-bit MAC:
both sha1 and sha2 variants of 96 bit macs are considered deprecated.

<a href='https://10.CBC' target='_blank'>10.CBC</a> Ciphers:
All CBC Ciphers are deprecated.

As cryptographic attacks on SHA-1 (RFC 9142) become more feasible, the integrity and security of communications relying on it can be compromised. We agree that reporting diffie-hellman-group14-sha1 as deprecated is on harsher side of the gray area, but it ensures that you are aware of its weakness and the risks they pose. While it can be used as a last resort when no better options are available, this should be seen as an exception rather than a rule, highlighting the importance of transitioning to more secure algorithms whenever possible.
""","19Feb: Waiting on customer.
10Feb: Chased with R&D.
03Feb: Chased with R&D.
28Jan: asked R&D about limitations between Ubuntu 18.04 vs 22.04.
23Jan: un-commented line. Waiting on customer to run scan again.
22Jan: Waiting on Catalin to confirm if we should re-add the line: KexAlgorithms ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1

---
Waiting on Customer for RS.","Provided information. Confirmed we can close.","","Flaviu Moldovan","Unexpected Behavior","Netwrix Endpoint Protector","Server","Server Security Vulnerability","","","188.7","Closed - Resolved","Ernst & Young USA","Doug Russell","2024-09-04T20:08:00.000Z","2025-03-12T13:06:09.000Z"
