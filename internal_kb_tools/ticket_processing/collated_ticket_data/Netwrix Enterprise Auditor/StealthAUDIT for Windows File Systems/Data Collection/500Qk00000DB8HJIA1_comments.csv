"Id","ParentId","CommentBody","CreatedById","CreatedDate","LastModifiedDate","IsPublished","IsDeleted"
"00aQk000007yxE5IAI","500Qk00000DB8HJIA1","Can you confirm if the customer is using Cyberark to store passwords?

If so and they upgraded their Cyberark client. It may no longer work for NEA.
Development is working on a fix but it will be a little while out yet.

If they are not using cyberark. it may require a call to review.","0054u000006gpoAAAQ","2024-07-17T13:57:19.000Z","2024-07-17T13:57:19.000Z","false","false"
"00aQk0000084c8YIAQ","500Qk00000DB8HJIA1","CyberArk is not in play here. They have issues with the FSAA  Certificate Authority certificate probably. Asked to delete certificates and rerun the scan

18/07/2024 14:30:53	DEBUG	FILESYSTEMACCESS	AccessScanTask	""Acquiring certificate exchange lock at D:Program Files (x86)STEALTHbitsStealthAUDITFSAAfsaa_certificate_exchange.lock""	MANDBN-FS-01	DCExtract	17652	14276	17492
18/07/2024 14:30:53	DEBUG	FILESYSTEMACCESS	AccessScanTask	""Using certificate authority: Friendly Name = FSAA Certificate Authority 2024/07/16 4:42:15 PM, Thumbprint = E9BA5D20DB507F2E449F38DC752B3E613F2BF987""	MANDBN-FS-01	DCExtract	17652	14276	17492
18/07/2024 14:30:55	DEBUG	FILESYSTEMACCESS	AccessScanTask	""System.Security.Cryptography.CryptographicException: Invalid provider type specified.       at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)     at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContainer, Int32 dwKeySize, SafeProvHandle& safeProvHandle, SafeKeyHandle& safeKeyHandle)     at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()     at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)     at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.Applet.Common.Certificate.CertificateManager.CreateCertificate(X509Certificate2 issuer, String subjectName, ICollection`1 subjectAlternativeNames, String friendlyName, CertificatePurpose purpose, Nullable`1 startDateTime, Nullable`1 endDateTime, String password)     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.AppletDeployment.ExchangeCertificatesImpl(String host, Int32 port, CertificateExchangeMechanism certificateExchangeMechanism, String certificateAuthorityPath, NetworkCredential credentials, String servicePrincipalName)     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.AppletDeployment.ExchangeCertificates(String host, Int32 port, CertificateExchangeMechanism certificateExchangeMechanism, String certificateAuthorityPath, NetworkCredential credentials, String servicePrincipalName)     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.ScanTaskBase.GetClientCertificate(String execHost, Int32 port, Boolean runAsLocalSystem, NetworkCredential credentials)     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.ScanTaskBase.StartScanSession(String execHost, Int32 endPoint, Int32 certificateExchangePort, AppletPriority appletPriority, FSAAConfigType configXML)     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.ScanTaskBase.StartScanSessionWithRetry(String execHost, Int32 endPoint, Int32 certificateExchangePort, AppletPriority appletPriority, FSAAConfigType configXML)     at Stealthbits.StealthAUDIT.DataCollectors.FSAA.AccessScanTask.<InternalProcessRecordAsync>d__2.MoveNext()""	MANDBN-FS-01	DCExtract	17652	14276	17492","0054u000007MeUDAA0","2024-07-22T14:08:05.000Z","2024-07-22T14:08:05.000Z","false","false"
