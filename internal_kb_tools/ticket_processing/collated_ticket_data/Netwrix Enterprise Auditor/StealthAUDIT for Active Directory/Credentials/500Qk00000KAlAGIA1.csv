"Id","CaseNumber","Ticket_Record_Type_Name__c","Subject","Description","DevOps_Steps_to_Reproduce__c","What_We_Know__c","Next_Steps__c","Solution_Comment__c","Issue_Type__c","Ticket_Owner_Name__c","Ticket_Type__c","Platform__c","Collector_Code__c","Feature__c","Product_Version__c","Build_Number__c","Age__c","Status","Account_Name__c","Contact_Name__c","CreatedDate","ClosedDate"
"500Qk00000KAlAGIA1","00431104","Support Ticket","AD_WeakPasswords Solution Job Failure","The job is failing with error message ""System.UnauthorizedAccessException: Replication access was denied ---> System.ComponentModel.Win32Exception: Replication access was denied
   --- End of inner exception stack trace ---
   at DSInternals.Common.Validator.AssertSuccess(Win32ErrorCode code)
   at DSInternals.Replication.Interop.DrsConnection.GetNCChanges(unique_ptr* , unique_ptr* request)
   at DSInternals.Replication.Interop.DrsConnection.ReplicateAllObjects(ReplicationCookie cookie, UInt32[] partialAttributeSet, UInt32 maxBytes, UInt32 maxObjects)
   at DSInternals.Replication.DirectoryReplicationClient.d__11.MoveNext()
   at Stealthbits.StealthAUDIT.DataCollectors.PasswordSecurity.Tasks.WeakPasswordsScanTask.InternalProcessRecord()""
   at <a href='https://Stealthbits.StealthAUDIT.DataCollectors.Tasks.Task' target='_blank'>Stealthbits.StealthAUDIT.DataCollectors.Tasks.Task</a>.StartExecute()","Have 11.6.0.72 NEA installed 
Configure gMSA domain account 
Adding gMSA account using ""Managed Service Account"" password storage to connection profile produces error ""Access Denied"".
If gMSA account is added via ""Application"" password storage - then access denied error appears during ""AD_WeakPassword"" job execution.","On last meeting with customer (02.05.2025) - we added user account that started NEA console to the list of principals allowed to retrieve managed password. 
We used these commands to add this user:
#Get current list of allowed principals and assign it to a variable. Replace gMSA_acc with your gMSA account name.
$x = (Get-ADServiceAccount gMSA_acc -Properties  principalsallowedtoretrievemanagedpassword).principalsallowedtoretrievemanagedpassword

#Get account that user is logging in to Enterprise Auditor. Replace ""ADuser"" with the needed user. 
$x +=(get-aduser ADuser).distinguishedname

#Configure list of Principals Allowed to retrieve managed password using $x value. Replace gMSA_acc with your gMSA account name.
Set-ADServiceAccount gMSA_acc -PrincipalsAllowedToRetrieveManagedPassword $x

After this the gMSA account was successfully added to connection profile using ""Managed Service Account"" password storage. 
""AD_WeakPasswords"" job completed successfully (we started it interactively). 


Suggested customer to use security group for the ""principalsallowedtoretrievemanagedpassword"" property of gMSA account and append needed users to that security group for easier management. 

Users that must be added to security group as per our requirements:
All users that will be logging in to Enterprise Auditor console to run Jobs manually as well as all user/service accounts that will be used to run scheduled tasks. This includes computer account for NEA server if ""Local System"" is selected as a user account for running scheduled tasks. (can be added by adding computer object to the security group or by adding computer`s Distinguished Name to the ""principalsallowedtoretrievemanagedpassword"").","AD_WeakPasswords job is now running successfully. Waiting for customers reply.","AD_WeakPassword job was failing with ""Access Denied"" errors.
In the job logs the following errors could be observed:

""System.UnauthorizedAccessException: Replication access was denied ---> System.ComponentModel.Win32Exception: Replication access was denied

We resolved this issue by providing access to gMSA account password to the user account that was used to start Enterprise Auditor.
Access was granted using these commands run from PowerShell:

#Get current list of allowed principals and assign it to a variable. Replace gMSA_acc with your gMSA account name.
$x = (Get-ADServiceAccount gMSA_acc -Properties  principalsallowedtoretrievemanagedpassword).principalsallowedtoretrievemanagedpassword

#Get account that user is logging in to Enterprise Auditor. Replace ""ADuser"" with the needed user. 
$x +=(get-aduser ADuser).distinguishedname

#Configure list of Principals Allowed to retrieve managed password using $x value. Replace gMSA_acc with your gMSA account name.
Set-ADServiceAccount gMSA_acc -PrincipalsAllowedToRetrieveManagedPassword $x

After this we were able to successfully add gMSA account to the connection profile using ""Managed Service Account"" as password storage.

We also reconfigured the ""AD_WeakPasswords"" job to use ""ADSync"" connection profile (which is now configured with gMSA account). The job completed successfully using gMSA account.","Guidance","Artem Naskal","Error","Netwrix Enterprise Auditor","StealthAUDIT for Active Directory","Credentials","11.6","11.6.0.72","38.1","Closed - Resolved","Baker & McKenzie Global Services LLC","Don Boncodin","2025-01-03T13:17:40.000Z","2025-02-10T14:36:28.000Z"
