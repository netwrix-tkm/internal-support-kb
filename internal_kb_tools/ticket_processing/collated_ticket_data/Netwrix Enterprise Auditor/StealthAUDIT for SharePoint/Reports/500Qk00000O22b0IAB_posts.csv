"Id","ParentId","Type","CreatedById","CreatedDate","Body","Title","LinkUrl","RelatedRecordId","InsertedById","LastModifiedDate"
"0D5Qk00000bpGk1KAE","500Qk00000O22b0IAB","TextPost","0054u000008ARZjAAO","2025-04-14T13:27:50.000Z","Description: I ran the SharePoint- Broken Inheritance Job on our designated server A0775-APP2357-S   which utilizes SQL database A0775-DBS0136-S .
 I received an email that the CPU was at 100% on and off during the Jobs execution and a request to have the query rewritten.

I have provided the text of the email below: Please note that we have had many issues over the last 6 months and several tickets open relating to similar issues. 

Looking at the server, your -A account was logged running queries through a .Net provider against database J4D_STEALTHAUDIT_AEM_SP. The query is below. The highest cost I am seeing on this query is your INSERT, which is listed in the query as a SELECT…INTO. 

Please rewrite your query to create your temp tables BEFORE you insert into them in order to save processing power and to prevent server outages / disruptions. Additionally, create an unnamed primary key on the tables to keep the metadata in SQL Server for faster processing. Details on both of these items can be found in the attached database standards document.

  SELECT Host,ResourceID,Template  
  INTO #Teams  
  FROM SA_SPAA_Sites  
  WHERE Template = 'GROUP#0'    ;

  With SCTV_CTE (         HostID,       ResourceID,       ParentResourceId,       ResourceName,       WebAppId,       
  siteCollectionId,       SiteCollectionName,       NestedLevel,       HostName,       FullPath,       ResourceDescription)
  AS  (  SELECT        HostID,       ResourceID,       ParentResourceId,       ResourceName,       WebAppId,       siteCollectionId,   
  SiteCollectionName as SiteCollection,       NestedLevel,       HostName,       FullPath,       ResourceDescription
  FROM SA_SPAA_SiteCollectionsTraversalView 
  WHERE  ParentResourceId is not null   AND  ResourceType  2  AND  NestedLevel","","","","0054u000008ARZjAAO","2025-04-14T13:27:50.000Z"
"0D5Qk00000bpSn5KAE","500Qk00000O22b0IAB","TextPost","00570000003KXurAAG","2025-04-14T14:44:31.000Z","<p>Not sure if the following will truly help or not in this case, we will need R&amp;D to confirm.</p><p>Based on the NEA/NAA 12 job it looks like the query in question is for the <b>SA_ENG_SPAA_Inheritance </b>table via the Analysis Properties for <b>1. Create Inheritance View</b>.</p><p>         ***STEALTHbitsStealthAUDITJobsGROUP_SharePointGROUP_3.Broken Inheritance<b>JOB_SP_BrokenInheritance</b></p><p> </p><p>Running the current TSQL through <b>Microsoft&#39;s Phi 4 LLM</b> when asked:</p><p>How can this TSQL query be improved for performance? </p><p>Would creating the Temp tables first help improve the overall query? If so include this functionality.</p><p> </p><p>This is the output </p><p> </p><p>To improve the performance of your T-SQL query, you can consider several strategies such as optimizing table creation and indexing, reducing unnecessary calculations or logic in SELECT statements, and ensuring efficient joins. Below is a revised version of your script with some improvements:</p><p> </p><p>1.<b> **Create Temp Tables First**: </b>This ensures that indexes are created before any data manipulation occurs.</p><p>2. <b>**Use Appropriate Data Types**:</b> Ensure the columns have appropriate data types to reduce storage and improve performance.</p><p>3. <b>**Avoid Unnecessary Calculations in SELECT Statements**:</b> Precompute values if possible.</p><p>4. <b>**Optimize Indexes**:</b> Create necessary indexes on temp tables right after their creation.</p><p> </p><p>Here&#39;s how you can rewrite your script with these improvements:</p><p> </p><p>```sql</p><p>-- Drop the temp table #children if it exists</p><p>IF OBJECT_ID(&#39;tempdb..#children&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE #children;</p><p> </p><p>GO</p><p> </p><p>-- Create and populate the #children temp table first, then create index</p><p>SELECT </p><p>   [d].[HostID],</p><p>   [d].[ResourceID],</p><p>   [d].[ParentResourceID] AS ParentID,</p><p>   [d].[TrusteeID],</p><p>   [d].[TrusteeSid] AS TrusteeSID,</p><p>   CASE WHEN p.DeletedUSN IS NOT NULL THEN &#39;Identical Permissions&#39;</p><p>        ELSE &#39;Permissions Not Evaluated&#39; END AS Inheritance, -- Placeholder for later logic</p><p>   c.RightsDescription as Rights,</p><p>   c.TrusteeDisplayName as [Trustee Display Name],</p><p>   c.TrusteeNTStyleName as [Trustee NT Style Name],</p><p>   c.[Trustee Type]</p><p>INTO #children</p><p>FROM </p><p>   SA_SPAA_DirectPermissions d</p><p>LEFT JOIN </p><p>   #parents p ON d.HostID = p.HostID AND d.ResourceId = p.ParentResourceId AND d.TrusteeId = p.TrusteeID;</p><p> </p><p>-- Create index on the newly created temp table for efficient joins</p><p>CREATE INDEX IX_children_HostResource ON #children (HostID, ResourceId);</p><p> </p><p>GO</p><p> </p><p>-- Drop the temp table #parents if it exists</p><p>IF OBJECT_ID(&#39;tempdb..#parents&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE #parents;</p><p> </p><p>GO</p><p> </p><p>-- Create and populate the #parents temp table first, then create index</p><p>SELECT </p><p>   [p].[HostID],</p><p>   [p].[ParentResourceId] AS ParentId,</p><p>   -- Other columns...</p><p>INTO #Parents</p><p>FROM </p><p>   SA_SPAA_ParentPermissions p;</p><p> </p><p>CREATE INDEX IX_parents_HostParent ON #parents (HostID, ParentResourceID);</p><p> </p><p>GO</p><p> </p><p>-- Clean up existing view or table if necessary</p><p>IF OBJECT_ID(&#39;SA_ENG_SPAA_Inheritance&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE [SA_ENG_SPAA_Inheritance];</p><p> </p><p>GO</p><p> </p><p>WITH SCTV_CTE AS (</p><p>   SELECT </p><p>       HostID,</p><p>       ResourceID,</p><p>       ParentResourceId,</p><p>       -- Other columns...</p><p>   FROM SA_SPAA_SiteCollectionsTraversalView</p><p>   WHERE ParentResourceId IS NOT NULL AND ResourceType &lt;&gt; 2 AND NestedLevel BETWEEN 1 AND 2</p><p>)</p><p>SELECT DISTINCT</p><p>   s.HostID,</p><p>   s.ResourceID,</p><p>   c.Inheritance, </p><p>   -- Remaining SELECT fields as per your logic...</p><p>INTO [SA_ENG_SPAA_Inheritance]</p><p>FROM SA_SPAA_Resources r</p><p>INNER JOIN SCTV_CTE s ON r.HOST = s.HostID AND r.ID = s.ResourceID</p><p>LEFT JOIN #children c ON c.HostID = s.HostID AND s.ResourceID = c.ResourceId</p><p>LEFT JOIN #parents p ON s.hostid = p.hostid AND s.parentresourceid = p.parentid;</p><p> </p><p><b>-- Additional cleanup and operations...</b></p><p>```</p><p> </p><p>**Key Improvements:**</p><p> </p><p>- **Precreate Indexes**: Indexes are created immediately after populating the temp tables, ensuring they&#39;re available for subsequent queries.</p><p>- **Conditional Logic Optimization**: Inheritance logic is simplified with a placeholder in `#children` creation to avoid multiple joins or calculations later on.</p><p>- **Use of Common Table Expressions (CTEs)**: CTEs are used efficiently to simplify complex hierarchical data retrieval.</p><p> </p><p>Consider profiling the execution plan after these changes to identify further optimizations, and adjust indexes based on query patterns. Also ensure that statistics are up-to-date for optimal query performance.</p>","","","","00570000003KXurAAG","2025-04-14T14:44:31.000Z"
"0D5Qk00000bsJURKA2","500Qk00000O22b0IAB","TextPost","0054u000007ow49AAA","2025-04-15T10:30:33.000Z","Invitation updated. Attendees: Ilya Kotov, Stealth Audit","","","","0054u000007ow49AAA","2025-04-15T10:30:33.000Z"
"0D5Qk00000bsJUQKA2","500Qk00000O22b0IAB","TextPost","0054u000007ow49AAA","2025-04-15T10:30:33.000Z","Invitation updated. Attendees: Ilya Kotov","","","","0054u000007ow49AAA","2025-04-15T10:30:33.000Z"
"0D5Qk00000bsJUPKA2","500Qk00000O22b0IAB","TextPost","0054u000007ow49AAA","2025-04-15T10:30:33.000Z","Invitation updated. Attendees: No attendees listed","","","","0054u000007ow49AAA","2025-04-15T10:30:33.000Z"
"0D5Qk00000bsrFsKAI","500Qk00000O22b0IAB","TextPost","0054u000007ow49AAA","2025-04-15T15:02:11.000Z","Steps to Reproduce Updated: N/A - Suggestion on improvement","","","","0054u000007ow49AAA","2025-04-15T15:02:11.000Z"
"0D5Qk00000bsyPDKAY","500Qk00000O22b0IAB","TextPost","0054u000007ow49AAA","2025-04-15T15:03:42.000Z","Next Steps Updated: Closure","","","","0054u000007ow49AAA","2025-04-15T15:03:42.000Z"
"0D5Qk00000bsyPCKAY","500Qk00000O22b0IAB","TextPost","0054u000007ow49AAA","2025-04-15T15:03:42.000Z","What We've Learned Updated: Test greenlit, given that they perform it on the copies of the job.","","","","0054u000007ow49AAA","2025-04-15T15:03:42.000Z"
